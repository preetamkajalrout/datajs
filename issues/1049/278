--- datajs-1.1.1beta.js	2013-05-05 11:59:54.000000000 +0200
+++ datajs-1.1.1beta-sdrees.js	2013-05-05 16:09:50.000000000 +0200
@@ -44,9 +44,9 @@
         ///    of the ActiveXObject.
         /// </remarks>
         /// <returns type="Object">
-        ///     The ActiveXObject instance. Null if ActiveX is not supported by the 
+        ///     The ActiveXObject instance. Null if ActiveX is not supported by the
         ///     browser.
-        /// </returns>    
+        /// </returns>
         if (window.ActiveXObject) {
             return new window.ActiveXObject(progId);
         }
@@ -402,7 +402,7 @@
 
     var convertByteArrayToHexString = function (str) {
         var arr = [];
-        if (window.atob == undefined) {
+        if (window.atob === undefined) {
             arr = decodeBase64(str);
         } else {
             var binaryStr = window.atob(str);
@@ -412,8 +412,8 @@
         }
         var hexValue = "";
         var hexValues = "0123456789ABCDEF";
-        for (i = 0; i < arr.length; i++) {
-            var t = arr[i];
+        for (var j = 0; j < arr.length; j++) {
+            var t = arr[j];
             hexValue += hexValues[t >> 4];
             hexValue += hexValues[t & 0x0F];
         }
@@ -425,13 +425,13 @@
         for (var i = 0; i < str.length; i++) {
             var base65IndexValue = getBase64IndexValue(str[i]);
             var binaryValue = "";
-            if (base65IndexValue != null) {
+            if (base65IndexValue !== null) {
                 binaryValue = base65IndexValue.toString(2);
                 binaryString += addBase64Padding(binaryValue);
             }
         }
         var byteArray = [];
-        var numberOfBytes = parseInt(binaryString.length / 8);
+        var numberOfBytes = parseInt(binaryString.length / 8, 10);
         for (i = 0; i < numberOfBytes; i++) {
             var intValue = parseInt(binaryString.substring(i * 8, (i + 1) * 8), 2);
             byteArray.push(intValue);
@@ -455,7 +455,7 @@
             return 63;
         } else {
             return null;
-        };
+        }
     };
 
     var addBase64Padding = function (binaryString) {
@@ -521,7 +521,7 @@
         /// </returns>
 
         var nodeName = domAttribute.nodeName;
-        return nodeName == "xmlns" || nodeName.indexOf("xmlns:") == 0;
+        return nodeName == "xmlns" || nodeName.indexOf("xmlns:") === 0;
     };
 
     var safeSetProperty = function (obj, name, value) {
@@ -556,8 +556,8 @@
         /// <summary>Creates an configures new MSXML 6.0 or MSXML 3.0 ActiveX object.</summary>
         /// <remakrs>
         ///    This function will try to create a new MSXML 6.0 ActiveX object. If it fails then
-        ///    it will fallback to create a new MSXML 3.0 ActiveX object. Any exception that 
-        ///    happens during the creation of the MSXML 6.0 will be handled by the function while 
+        ///    it will fallback to create a new MSXML 3.0 ActiveX object. Any exception that
+        ///    happens during the creation of the MSXML 6.0 will be handled by the function while
         ///    the ones that happend during the creation of the MSXML 3.0 will be thrown.
         /// <returns type="Object">New MSXML 3.0 ActiveX object.</returns>
 
@@ -576,7 +576,7 @@
         /// <summary>Parses an XML string using the MSXML DOM.</summary>
         /// <remakrs>
         ///    This function throws any exception that occurs during the creation
-        ///    of the MSXML ActiveX object.  It also will throw an exception 
+        ///    of the MSXML ActiveX object.  It also will throw an exception
         ///    in case of a parsing error.
         /// <returns type="Object">New MSXML DOMDocument node representing the parsed XML string.</returns>
 
@@ -596,17 +596,17 @@
     var xmlThrowParserError = function (exceptionOrReason, srcText, errorXmlText) {
         /// <summary>Throws a new exception containing XML parsing error information.</summary>
         /// <param name="exceptionOrReason">
-        ///    String indicatin the reason of the parsing failure or 
+        ///    String indicatin the reason of the parsing failure or
         ///    Object detailing the parsing error.
         /// </param>
         /// <param name="srcText" type="String">
         ///    String indicating the part of the XML string that caused the parsing error.
         /// </param>
-        /// <param name="errorXmlText" type="String">XML string for wich the parsing failed.</param> 
+        /// <param name="errorXmlText" type="String">XML string for wich the parsing failed.</param>
 
         if (typeof exceptionOrReason === "string") {
             exceptionOrReason = { message: exceptionOrReason };
-        };
+        }
         throw extend(exceptionOrReason, { srcText: srcText || "", errorXmlText: errorXmlText || "" });
     };
 
@@ -731,7 +731,7 @@
     var xmlBaseURI = function (domNode, baseURI) {
         /// <summary>Gets the value of the xml:base attribute on the specified element.</summary>
         /// <param name="domNode">Element to get xml:base attribute value from.</param>
-        /// <param name="baseURI" mayBeNull="true" optional="true">Base URI used to normalize the value of the xml:base attribute.</param> 
+        /// <param name="baseURI" mayBeNull="true" optional="true">Base URI used to normalize the value of the xml:base attribute.</param>
         /// <returns type="String">Value of the xml:base attribute if found; the baseURI or null otherwise.</returns>
 
         var base = xmlAttributeNode(domNode, "base", xmlNS);
@@ -760,7 +760,7 @@
         /// <param name="path" type="String">Path to the desired descendant element.</param>
         /// <returns>The element specified by path and namespace URI.</returns>
         /// <remarks>
-        ///     All the elements in the path are matched against namespaceURI. 
+        ///     All the elements in the path are matched against namespaceURI.
         ///     The function will stop searching on the first element that doesn't match the namespace and the path.
         /// </remarks>
 
@@ -803,7 +803,7 @@
         /// <summary>Returns the first child DOM element under the specified DOM node that matches the specified namespace URI and local name.</summary>
         /// <param name="domNode">DOM node from which the child DOM element is going to be retrieved.</param>
         /// <param name="namespaceURI" type="String" optional="true">The namespace URI of the element to match.</param>
-        /// <param name="localName" type="String" optional="true">Name of the element to match.</param> 
+        /// <param name="localName" type="String" optional="true">Name of the element to match.</param>
         /// <returns>The node's first child DOM element that matches the specified namespace URI and local name; null otherwise.</returns>
 
         return xmlFirstElementMaybeRecursive(domNode, namespaceURI, localName, /*recursive*/false);
@@ -813,7 +813,7 @@
         /// <summary>Returns the first descendant DOM element under the specified DOM node that matches the specified namespace URI and local name.</summary>
         /// <param name="domNode">DOM node from which the descendant DOM element is going to be retrieved.</param>
         /// <param name="namespaceURI" type="String" optional="true">The namespace URI of the element to match.</param>
-        /// <param name="localName" type="String" optional="true">Name of the element to match.</param> 
+        /// <param name="localName" type="String" optional="true">Name of the element to match.</param>
         /// <returns>The node's first descendant DOM element that matches the specified namespace URI and local name; null otherwise.</returns>
 
         if (domNode.getElementsByTagNameNS) {
@@ -827,9 +827,9 @@
         /// <summary>Returns the first descendant DOM element under the specified DOM node that matches the specified namespace URI and local name.</summary>
         /// <param name="domNode">DOM node from which the descendant DOM element is going to be retrieved.</param>
         /// <param name="namespaceURI" type="String" optional="true">The namespace URI of the element to match.</param>
-        /// <param name="localName" type="String" optional="true">Name of the element to match.</param> 
+        /// <param name="localName" type="String" optional="true">Name of the element to match.</param>
         /// <param name="recursive" type="Boolean">
-        ///     True if the search should include all the descendants of the DOM node. 
+        ///     True if the search should include all the descendants of the DOM node.
         ///     False if the search should be scoped only to the direct children of the DOM node.
         /// </param>
         /// <returns>The node's first descendant DOM element that matches the specified namespace URI and local name; null otherwise.</returns>
@@ -915,7 +915,7 @@
         /// <summary>Returns the value or the inner text of a XML node.</summary>
         /// <param name="node">DOM node to get the value from.</param>
         /// <returns>Value of the domNode or the inner text if domNode represents a DOM element node.</returns>
-        
+
         if (domNode.nodeType === 1) {
             return xmlInnerText(domNode);
         }
@@ -949,7 +949,7 @@
         /// <summary>Returns the next sibling DOM element of the specified DOM node.</summary>
         /// <param name="domNode">DOM node from which the next sibling is going to be retrieved.</param>
         /// <param name="namespaceURI" type="String" optional="true">The namespace URI of the element to match.</param>
-        /// <param name="localName" type="String" optional="true">Name of the element to match.</param> 
+        /// <param name="localName" type="String" optional="true">Name of the element to match.</param>
         /// <returns>The node's next sibling DOM element, null if there is none.</returns>
 
         var sibling = domNode.nextSibling;
@@ -971,11 +971,11 @@
         /// <summary>Creates a new empty DOM document node.</summary>
         /// <returns>New DOM document node.</returns>
         /// <remarks>
-        ///    This function will first try to create a native DOM document using 
-        ///    the browsers createDocument function.  If the browser doesn't 
-        ///    support this but supports ActiveXObject, then an attempt to create 
+        ///    This function will first try to create a native DOM document using
+        ///    the browsers createDocument function.  If the browser doesn't
+        ///    support this but supports ActiveXObject, then an attempt to create
         ///    an MSXML 6.0 DOM will be made. If this attempt fails too, then an attempt
-        ///    for creating an MXSML 3.0 DOM will be made.  If this last attemp fails or 
+        ///    for creating an MXSML 3.0 DOM will be made.  If this last attemp fails or
         ///    the browser doesn't support ActiveXObject then an exception will be thrown.
         /// </remarks>
 
@@ -991,7 +991,7 @@
         /// <param name="children" type="Array">Array containing DOM nodes or string values that will be appended to the parent.</param>
         /// <returns>The parent with the appended children or string values.</returns>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended to the parent.
         /// </remarks>
 
@@ -1001,7 +1001,7 @@
 
         var i, len;
         for (i = 0, len = children.length; i < len; i++) {
-            children[i] && xmlAppendChild(parent, children[i]);
+            ignore = children[i] && xmlAppendChild(parent, children[i]);
         }
         return parent;
     };
@@ -1012,7 +1012,7 @@
         /// <param name="child">Child DOM node or string value to append to the parent.</param>
         /// <returns>The parent with the appended child or string value.</returns>
         /// <remarks>
-        ///    If child is a string value, then a new DOM text node is going to be created 
+        ///    If child is a string value, then a new DOM text node is going to be created
         ///    for it and then appended to the parent.
         /// </remarks>
 
@@ -1021,7 +1021,7 @@
                 return xmlAppendText(parent, xmlNewText(parent.ownerDocument, child));
             }
             if (child.nodeType === 2) {
-                parent.setAttributeNodeNS ? parent.setAttributeNodeNS(child) : parent.setAttributeNode(child);
+                ignore = parent.setAttributeNodeNS ? parent.setAttributeNodeNS(child) : parent.setAttributeNode(child);
             } else {
                 parent.appendChild(child);
             }
@@ -1054,7 +1054,7 @@
         /// </param>
         /// <returns>New DOM element.</returns>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended to the new DOM element.
         /// </remarks>
 
@@ -1113,10 +1113,10 @@
         /// <param name="Path" type="String">Path string describing the location of the new DOM element or attribute from the root element.</param>
         /// <returns>DOM element or attribute node for the last segment of the path.</returns>
         /// <remarks>
-        ///     This function will traverse the path and will create a new DOM element with the specified namespace URI and prefix 
+        ///     This function will traverse the path and will create a new DOM element with the specified namespace URI and prefix
         ///     for each segment that doesn't have a matching element under root.
         ///
-        ///     The last segment of the path may be decorated with a starting @ character. In this case a new DOM attribute node 
+        ///     The last segment of the path may be decorated with a starting @ character. In this case a new DOM attribute node
         ///     will be created.
         /// </remarks>
 
@@ -1177,8 +1177,8 @@
         }
 
         // Some implementations of the XMLSerializer don't deal very well with fragments that
-        // don't have a DOMElement as their first child. The work around is to wrap all the 
-        // nodes in a dummy root node named "c", serialize it and then just extract the text between 
+        // don't have a DOMElement as their first child. The work around is to wrap all the
+        // nodes in a dummy root node named "c", serialize it and then just extract the text between
         // the <c> and the </c> substrings.
 
         var dom = domNode.ownerDocument;
@@ -1251,7 +1251,7 @@
         /// or the original object.
         ///
         /// Compability Note B - Fulfillment value
-        /// 
+        ///
         /// The Wiki entry at http://wiki.commonjs.org/wiki/Promises/A
         /// implies that the result of a success callback is the
         /// fulfillment value of the object and is received by
@@ -1294,7 +1294,7 @@
             //// See Compatibility Note A in the DjsDeferred constructor.
             //// if (!this._next) {
             ////    this._next = createDeferred();
-            //// } 
+            //// }
             //// return this._next.promise();
 
             if (this._resolved) {
@@ -1315,7 +1315,7 @@
                 var i, len;
                 for (i = 0, len = this._done.length; i < len; i++) {
                     //// See Compability Note B - Fulfillment value.
-                    //// var nextValue = 
+                    //// var nextValue =
                     this._done[i].apply(null, arguments);
                 }
 
@@ -1382,7 +1382,7 @@
         /// <param name="value">Value of the data item from which the type name is going to be retrieved.</param>
         /// <param name="metadata" type="object" optional="true">Object containing metadata about the data tiem.</param>
         /// <remarks>
-        ///    This function will first try to get the type name from the data item's value itself if it is an object with a __metadata property; otherwise 
+        ///    This function will first try to get the type name from the data item's value itself if it is an object with a __metadata property; otherwise
         ///    it will try to recover it from the metadata.  If both attempts fail, it will return null.
         /// </remarks>
         /// <returns type="String">Data item type name; null if the type name cannot be found within the value or the metadata</returns>
@@ -1791,7 +1791,7 @@
         /// <summary>Tests whether a value is a primitive type value in the library's internal representation.</summary>
         /// <param name="value">Value to test.</param>
         /// <remarks>
-        ///    Date objects are considered primitive types by the library. 
+        ///    Date objects are considered primitive types by the library.
         /// </remarks>
         /// <returns type="Boolean">True is the value is a primitive type value.</returns>
 
@@ -2057,9 +2057,9 @@
         var leftParts = left.split(".");
         var rightParts = right.split(".");
 
-        var len = (leftParts.length >= rightParts.length)
-            ? leftParts.length
-            : rightParts.length;
+        var len = (leftParts.length >= rightParts.length) ?
+            leftParts.length :
+            rightParts.length;
 
         for (var i = 0; i < len; i++) {
             var leftVersion = leftParts[i] && parseInt10(leftParts[i]);
@@ -2232,13 +2232,13 @@
 
     var isEdmDurationValue = function (value) {
         parseTimeRE.test(value);
-    }
+    };
 
     var parseDuration = function (duration) {
         /// <summary>Parses a string in xsd:duration format.</summary>
         /// <param name="duration" type="String">Duration value.</param>
         /// <remarks>
-        /// This method will throw an exception if the input string has a year or a month component. 
+        /// This method will throw an exception if the input string has a year or a month component.
         /// </remarks>
         /// <returns type="Object">Object representing the time</returns>
 
@@ -2311,7 +2311,7 @@
         /// <param name="handler">Handler for data serialization</param>
         /// <param name="context">Context used for preparing the request</param>
 
-        // Default to GET if no method has been specified.    
+        // Default to GET if no method has been specified.
         if (!request.method) {
             request.method = "GET";
         }
@@ -2403,7 +2403,7 @@
         var iframe = window.document.createElement("IFRAME");
         iframe.style.display = "none";
 
-        var attributeEncodedUrl = url.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/\</g, "&lt;");
+        var attributeEncodedUrl = url.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/</g, "&lt;");
         var html = "<html><head><script type=\"text/javascript\" src=\"" + attributeEncodedUrl + "\"><\/script><\/head><body><\/body><\/html>";
 
         var body = window.document.getElementsByTagName("BODY")[0];
@@ -2632,8 +2632,8 @@
 
 
                         var headers;
-                        // Adding dataServiceVersion in case of json light ( data.d doesn't exist ) 
-                        if (data.d == undefined) {
+                        // Adding dataServiceVersion in case of json light ( data.d doesn't exist )
+                        if (data.d === undefined) {
                             headers = { "Content-Type": "application/json;odata=minimalmetadata", dataServiceVersion: "3.0" };
                         } else {
                             headers = { "Content-Type": "application/json" };
@@ -2904,8 +2904,8 @@
     odata.textHandler = handler(textParse, textSerialize, "text/plain", MAX_DATA_SERVICE_VERSION);
 
 
-    var gmlOpenGis = http + "www.opengis.net";           // http://www.opengis.net 
-    var gmlXmlNs = gmlOpenGis + "/gml";                 // http://www.opengis.net/gml 
+    var gmlOpenGis = http + "www.opengis.net";           // http://www.opengis.net
+    var gmlXmlNs = gmlOpenGis + "/gml";                 // http://www.opengis.net/gml
     var gmlSrsPrefix = gmlOpenGis + "/def/crs/EPSG/0/"; // http://www.opengis.net/def/crs/EPSG/0/
 
     var gmlPrefix = "gml";
@@ -2914,7 +2914,7 @@
         /// <summary>Creates a GeoJSON object with the specified type, member and value.</summary>
         /// <param name="type" type="String">GeoJSON object type.</param>
         /// <param name="member" type="String">Name for the data member in the GeoJSON object.</param>
-        /// <param name="data">Data to be contained by the GeoJSON object.</param> 
+        /// <param name="data">Data to be contained by the GeoJSON object.</param>
         /// <returns type="Object">GeoJSON object.</returns>
 
         var result = { type: type };
@@ -2937,7 +2937,7 @@
 
     var gmlReadODataMultiItem = function (domElement, type, member, members, valueReader, isGeography) {
         /// <summary>
-        ///    Reads a GML DOM element that represents a composite structure like a multi-point or a 
+        ///    Reads a GML DOM element that represents a composite structure like a multi-point or a
         ///    multi-geometry returnig its GeoJSON representation.
         /// </summary>
         /// <param name="domElement">GML DOM element.</param>
@@ -2947,7 +2947,7 @@
         /// <param name="valueReader" type="Function">Callback function invoked to get the coordinates of each item in the comoposite structure.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">GeoJSON object.</returns>
@@ -2958,17 +2958,17 @@
 
     var gmlReadODataMultiItemValue = function (domElement, member, members, valueReader, isGeography) {
         /// <summary>
-        ///    Reads the value of a GML DOM element that represents a composite structure like a multi-point or a 
+        ///    Reads the value of a GML DOM element that represents a composite structure like a multi-point or a
         ///    multi-geometry returnig its items.
         /// </summary>
         /// <param name="domElement">GML DOM element.</param>
         /// <param name="type" type="String">GeoJSON object type.</param>
         /// <param name="member" type="String">Name for the child element representing a single item in the composite structure.</param>
         /// <param name="members" type="String">Name for the child element representing a collection of items in the composite structure.</param>
-        /// <param name="valueReader" type="Function">Callback function invoked to get the transformed value of each item in the comoposite structure.</param>  
+        /// <param name="valueReader" type="Function">Callback function invoked to get the transformed value of each item in the comoposite structure.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array containing the transformed value of each item in the multi-item.</returns>
@@ -3014,7 +3014,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">MultiGeometry object in GeoJSON format.</returns>
@@ -3028,7 +3028,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">LineString object in GeoJSON format.</returns>
@@ -3041,7 +3041,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">MultiLineString object in GeoJSON format.</returns>
@@ -3054,7 +3054,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">MultiPoint object in GeoJSON format.</returns>
@@ -3067,7 +3067,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">MultiPolygon object in GeoJSON format.</returns>
@@ -3080,7 +3080,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">Point object in GeoJSON format.</returns>
@@ -3093,7 +3093,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Object">Polygon object in GeoJSON format.</returns>
@@ -3106,7 +3106,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array containing an array of doubles for each coordinate of the line.</returns>
@@ -3144,7 +3144,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array of doubles containing the point coordinates.</returns>
@@ -3158,7 +3158,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array of doubles containing the point coordinates.</returns>
@@ -3172,7 +3172,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array containing an array of array of doubles for each ring of the polygon.</returns>
@@ -3210,7 +3210,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array containing an array of doubles for each coordinate of the linear ring.</returns>
@@ -3230,10 +3230,10 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         ///
-        ///    The positions described by the list are assumed to be 2D, so 
+        ///    The positions described by the list are assumed to be 2D, so
         ///    an exception will be thrown if the list has an odd number elements.
         /// </remarks>
         /// <returns type="Array">Array containing an array of doubles for each coordinate in the list.</returns>
@@ -3258,7 +3258,7 @@
         /// <param name="property">DOM element for the GML element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns type="Array">Array of doubles containing the coordinates.</returns>
@@ -3292,7 +3292,7 @@
         /// <param name="domElement">DOM element.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each position coordinates in the resulting GeoJSON object.
         /// </remarks>
         /// <returns type="Array">Array containing an array of doubles for each coordinate of the polygon.</returns>
@@ -3359,7 +3359,7 @@
         /// <param name="type" type="String">String indicating the GeoJSON type of the value to serialize.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the spatial value. </returns>
@@ -3418,7 +3418,7 @@
         /// <param name="children" type="Array">Array containing DOM nodes or string values that will be added as children of the new DOM element.</param>
         /// <returns>New DOM element in the GML namespace.</returns>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended as a child of the new DOM Element.
         /// </remarks>
 
@@ -3431,7 +3431,7 @@
         /// <param name="coordinates" type="Array">Array of doubles describing the coordinates of the pos element.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the coordinates use a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first coordinate is the Longitude and 
+        ///    When using a geographic reference system, the first coordinate is the Longitude and
         ///    will be serialized as the second component of the <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New pos DOM element in the GML namespace.</returns>
@@ -3452,7 +3452,7 @@
         /// <param name="coordinates" type="Array">Array of array of doubles describing the coordinates of the line element.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the coordinates use a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace.</returns>
@@ -3477,7 +3477,7 @@
         /// <param name="value" type="Object">GeoJSON Point object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON Point.</returns>
@@ -3491,7 +3491,7 @@
         /// <param name="coordinates" type="Array">Array of array of doubles describing the coordinates of the line element.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON LineString.</returns>
@@ -3506,7 +3506,7 @@
         /// <param name="coordinates" type="Array">Array of array of doubles describing the coordinates of the polygon ring.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the coordinates use a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace.</returns>
@@ -3525,7 +3525,7 @@
         /// <param name="coordinates" type="Array">Array of array of array of doubles describing the coordinates of the polygon.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace.</returns>
@@ -3550,7 +3550,7 @@
         /// <param name="value" type="Object">GeoJSON Point object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON Point.</returns>
@@ -3564,7 +3564,7 @@
         /// <param name="value" type="Object">GeoJSON LineString object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON LineString.</returns>
@@ -3578,7 +3578,7 @@
         /// <param name="value" type="Object">GeoJSON Polygon object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON Polygon.</returns>
@@ -3593,7 +3593,7 @@
         /// <param name="items" type="Array">Array of items in the composite structure.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the multi-item uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each of the items is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each of the items is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace.</returns>
@@ -3618,7 +3618,7 @@
         /// <param name="value" type="Object">GeoJSON MultiPoint object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON MultiPoint.</returns>
@@ -3632,7 +3632,7 @@
         /// <param name="value" type="Object">GeoJSON MultiLineString object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON MultiLineString.</returns>
@@ -3646,7 +3646,7 @@
         /// <param name="value" type="Object">GeoJSON MultiPolygon object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON MultiPolygon.</returns>
@@ -3660,7 +3660,7 @@
         /// <param name="item" type="Object">GeoJSON object in the geometry collection.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace.</returns>
@@ -3674,7 +3674,7 @@
         /// <param name="value" type="Object">GeoJSON GeometryCollection object.</param>
         /// <param name="isGeography" type="Boolean">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in the GeoJSON value is the Longitude and
         ///    will be serialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the GeoJSON GeometryCollection.</returns>
@@ -3713,9 +3713,9 @@
         /// <param name="domNode">DOM node for the attribute.</param>
         /// <param name="useNamespaceURI" type="Boolean">Flag indicating if the namespaceURI property should be added to the extension object instead of the namespace property.</param>
         /// <remarks>
-        ///    The useNamespaceURI flag is used to prevent a breaking change from older versions of datajs in which extension 
+        ///    The useNamespaceURI flag is used to prevent a breaking change from older versions of datajs in which extension
         ///    objects created for Atom extension attributes have the namespaceURI property instead of the namespace one.
-        ///    
+        ///
         ///    This flag and the namespaceURI property should be deprecated in future major versions of the library.
         /// </remarks>
         /// <returns type="Object">The new extension object.</returns>
@@ -3731,9 +3731,9 @@
         /// <param name="domNode">DOM node for the element.</param>
         /// <param name="useNamespaceURI" type="Boolean">Flag indicating if the namespaceURI property should be added to the extension object instead of the namespace property.</param>
         /// <remarks>
-        ///    The useNamespaceURI flag is used to prevent a breaking change from older versions of datajs in which extension 
+        ///    The useNamespaceURI flag is used to prevent a breaking change from older versions of datajs in which extension
         ///    objects created for Atom extension attributes have the namespaceURI property instead of the namespace one.
-        ///    
+        ///
         ///    This flag and the namespaceURI property should be deprecated in future major versions of the library.
         /// </remarks>
         /// <returns type="Object">The new extension object.</returns>
@@ -3752,12 +3752,12 @@
         }
 
         var child = domNode.firstChild;
-        while (child != null) {
+        while (child !== null) {
             if (child.nodeType === 1) {
                 childrenExtensions.push(createElementExtension(child, useNamespaceURI));
             }
             child = child.nextSibling;
-        };
+        }
 
         var extension = {
             name: xmlLocalName(domNode),
@@ -3855,7 +3855,7 @@
         if (xmlNamespaceURI(domElement) !== odataXmlNs) {
             // domElement is not a proprety element because it is not in the odata xml namespace.
             return null;
-        };
+        }
 
         var propertyName = xmlLocalName(domElement);
         var propertyAttributes = xmlReadODataPropertyAttributes(domElement);
@@ -3903,7 +3903,7 @@
         /// <param name="propertyType" type="String">Property type name.</param>
         /// <param name="isGeography" type="Boolean" Optional="True">Flag indicating if the value uses a geographic reference system or not.<param>
         /// <remarks>
-        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and 
+        ///    When using a geographic reference system, the first component of all the coordinates in each <pos> element in the GML DOM tree is the Latitude and
         ///    will be deserialized as the second component of each <pos> element in the GML DOM tree.
         /// </remarks>
         /// <returns>Spatial property value in GeoJSON format.</returns>
@@ -3946,7 +3946,7 @@
                 return parseDateTime(propertyValue);
             case EDM_DATETIMEOFFSET:
                 return parseDateTimeOffset(propertyValue);
-        };
+        }
 
         return propertyValue;
     };
@@ -3969,7 +3969,7 @@
         });
 
         return propertyValue;
-    }
+    };
 
     var xmlReadODataCollectionPropertyValue = function (domElement, propertyType, propertyMetadata) {
         /// <summary>Reads the value of a collection property in an OData XML document.</summary>
@@ -4051,10 +4051,10 @@
         /// <param name="value" type="Object">Spatial property value in GeoJSON format.</param>
         /// <param name="edmType" type="String" mayBeNull="true" optional="true">Spatial property edm type.<param>
         /// <remarks>
-        ///   If the edmType parameter is null, undefined, "Edm.Geometry" or "Edm.Geography", then the function returns 
+        ///   If the edmType parameter is null, undefined, "Edm.Geometry" or "Edm.Geography", then the function returns
         ///   the GeoJSON type indicated by the value's type property.
         ///
-        ///   If the edmType parameter is specified or is not one of the base spatial types, then it is used to 
+        ///   If the edmType parameter is specified or is not one of the base spatial types, then it is used to
         ///   determine the GeoJSON type and the value's type property is ignored.
         /// </remarks>
         /// <returns>New DOM element in the GML namespace for the spatial value. </returns>
@@ -4101,7 +4101,7 @@
         /// <param name="children" type="Array">Array containing DOM nodes or string values that will be added as children of the new DOM element.</param>
         /// <returns>New DOM element in the OData metadata namespace.</returns>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended as a child of the new DOM Element.
         /// </remarks>
 
@@ -4125,7 +4125,7 @@
         /// <param name="children" type="Array">Array containing DOM nodes or string values that will be added as children of the new DOM element.</param>
         /// <returns>New DOM element in the OData namespace.</returns>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended as a child of the new DOM Element.
         /// </remarks>
 
@@ -4163,7 +4163,7 @@
         /// <param name="typeName" type="String" optional="true">Property type name.</param>
         /// <param name="children" type="Array">Array containing DOM nodes or string values that will be added as children of the new DOM element.</param>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended as a child of the new DOM Element.
         /// </remarks>
         /// <returns>New DOM element in the OData namespace for the entry property.</returns>
@@ -4180,7 +4180,7 @@
         /// <param name="value">Property value.</param>
         /// <param name="typeName" type="String" optional="true">Property type name.</param>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the OData namespace for the EDM property and the 
+        ///     Object containing the new DOM element in the OData namespace for the EDM property and the
         ///     required data service version for this property.
         /// </returns>
 
@@ -4199,7 +4199,7 @@
         ///     If no typeName is specified, then it will be assumed that this is a primitive type property.
         /// </remarks>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the OData namespace for the null property and the 
+        ///     Object containing the new DOM element in the OData namespace for the null property and the
         ///     required data service version for this property.
         /// </returns>
 
@@ -4220,7 +4220,7 @@
         /// <param name="collectionModel" type="Object" optional="true">Object describing the collection property in an OData conceptual schema.</param>
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the OData namespace for the collection property and the 
+        ///     Object containing the new DOM element in the OData namespace for the collection property and the
         ///     required data service version for this property.
         /// </returns>
 
@@ -4251,7 +4251,7 @@
         /// <param name="propertyModel" type="Object" optional="true">Object describing the complex type property in an OData conceptual schema.</param>
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the OData namespace for the complex type property and the 
+        ///     Object containing the new DOM element in the OData namespace for the complex type property and the
         ///     required data service version for this property.
         /// </returns>
 
@@ -4271,7 +4271,7 @@
                 dataServiceVersion = maxVersion(dataServiceVersion, member.dsv);
                 xmlAppendChild(xmlProperty, member.element);
             }
-        };
+        }
         return xmlNewODataElementInfo(xmlProperty, dataServiceVersion);
     };
 
@@ -4282,7 +4282,7 @@
         /// <param name="value" type="Object">GeoJSON object containing the property value.</param>
         /// <param name="typeName" type="String" optional="true">Property type name.</param>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the OData namespace for the EDM property and the 
+        ///     Object containing the new DOM element in the OData namespace for the EDM property and the
         ///     required data service version for this property.
         /// </returns>
 
@@ -4303,7 +4303,7 @@
         /// <param name="dataItemModel" type="Object" optional="true">Object describing the data item in an OData conceptual schema.</param>
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the appropriate namespace for the data item and the 
+        ///     Object containing the new DOM element in the appropriate namespace for the data item and the
         ///     required data service version for it.
         /// </returns>
 
@@ -4325,7 +4325,7 @@
             return null;
         }
 
-        // This may be a navigation property.   
+        // This may be a navigation property.
         var navPropKind = navigationPropertyKind(value, dataItemModel);
         if (navPropKind !== null) {
             return null;
@@ -4492,11 +4492,11 @@
                 var suffixCounter = 0;
                 var suffix = "";
 
-                while (customization = atomFeedCustomization(property, entityType, model, property.name, suffix)) {
+                while ((customization = atomFeedCustomization(property, entityType, model, property.name, suffix)) !== null) {
                     callback(customization);
                     suffixCounter++;
                     suffix = "_" + suffixCounter;
-                };
+                }
             }
             entityType = lookupEntityType(entityType.baseType, model);
         }
@@ -4536,7 +4536,7 @@
         var nsURI = xmlNamespaceURI(domElement);
         var localName = xmlLocalName(domElement);
 
-        // Handle service documents. 
+        // Handle service documents.
         if (nsURI === appXmlNs && localName === "service") {
             return atomReadServiceDocument(domElement, baseURI);
         }
@@ -4626,7 +4626,7 @@
 
             if (nsURI === odataMetaXmlNs) {
                 if (localName === "count") {
-                    feed.__count = parseInt(xmlInnerText(child));
+                    feed.__count = parseInt(xmlInnerText(child),10);
                     return;
                 }
                 if (localName === "action") {
@@ -4642,7 +4642,7 @@
             if (isExtensionNs(nsURI)) {
                 extensions.push(createElementExtension(child));
                 return;
-            };
+            }
 
             // The element should belong to the ATOM namespace.
 
@@ -5085,7 +5085,7 @@
 
         var propertyName = link.rel.substring(odataRelatedLinksPrefix.length);
 
-        // Set the extra property information on the entry object metadata. 
+        // Set the extra property information on the entry object metadata.
         entryMetadata.properties = entryMetadata.properties || {};
         var propertyMetadata = entryMetadata.properties[propertyName] = entryMetadata.properties[propertyName] || {};
 
@@ -5118,7 +5118,7 @@
         // Set the property value on the entry object.
         entry[propertyName] = inlineData;
 
-        // Set the extra property information on the entry object metadata. 
+        // Set the extra property information on the entry object metadata.
         entryMetadata.properties = entryMetadata.properties || {};
         var propertyMetadata = entryMetadata.properties[propertyName] = entryMetadata.properties[propertyName] || {};
 
@@ -5197,7 +5197,7 @@
         /// <param name="mediaResource" type="Object">Object containing media information for an OData Atom entry.</param>
         /// <remarks>
         ///    The function will remove the extension object for the etag if it finds it in the link extensions and will set
-        ///    its value under the media_etag property of the mediaResource object. 
+        ///    its value under the media_etag property of the mediaResource object.
         /// <remarks>
         /// <returns type="Object"> Object containing the value and metadata of the named stream's media resource. <returns>
 
@@ -5216,7 +5216,7 @@
         /// <summary>Reads an atom entry's property as a structural object and sets its value in the parent and the metadata in the parentMetadata objects.</summary>
         /// <param name="propertiesElement">XML element for the 'properties' node.</param>
         /// <param name="parent">
-        ///     Object that will contain the property value. It can be either an antom entry or 
+        ///     Object that will contain the property value. It can be either an antom entry or
         ///     an atom complex property object.
         /// </param>
         /// <param name="parentMetadata">Object that will contain the property metadata. It can be either an atom entry metadata or a complex property metadata object</param>
@@ -5251,8 +5251,8 @@
             extensions.push(createElementExtension(child));
         });
 
-        // AtomPub (RFC 5023 Section 8.3.1) says a service document MUST contain one or 
-        // more workspaces. Throw if we don't find any. 
+        // AtomPub (RFC 5023 Section 8.3.1) says a service document MUST contain one or
+        // more workspaces. Throw if we don't find any.
         if (workspaces.length === 0) {
             throw { message: "Invalid AtomPub service document: No workspace element found.", element: domElement };
         }
@@ -5268,7 +5268,7 @@
 
         var collections = [];
         var extensions = [];
-        var title = undefined;
+        var title; // = undefined;
 
         baseURI = xmlBaseURI(domElement, baseURI);
 
@@ -5315,7 +5315,7 @@
         baseURI = xmlBaseURI(domElement, baseURI);
         href = normalizeURI(href, xmlBaseURI(domElement, baseURI));
         var extensions = [];
-        var title = undefined;
+        var title; // = undefined;
 
         xmlChildElements(domElement, function (child) {
             var nsURI = xmlNamespaceURI(child);
@@ -5336,9 +5336,9 @@
             }
         });
 
-        // AtomPub (RFC 5023 Section 8.3.3) says the collection element MUST contain 
-        // a title element. It's likely to be problematic if the service doc doesn't 
-        // have one so here we throw. 
+        // AtomPub (RFC 5023 Section 8.3.3) says the collection element MUST contain
+        // a title element. It's likely to be problematic if the service doc doesn't
+        // have one so here we throw.
         if (!title) {
             throw { message: "Invalid AtomPub service document: collection has no title element", element: domElement };
         }
@@ -5353,7 +5353,7 @@
         /// <param name="children" type="Array">Array containing DOM nodes or string values that will be added as children of the new DOM element.</param>
         /// <returns>New DOM element in the Atom namespace.</returns>
         /// <remarks>
-        ///    If a value in the children collection is a string, then a new DOM text node is going to be created 
+        ///    If a value in the children collection is a string, then a new DOM text node is going to be created
         ///    for it and then appended as a child of the new DOM Element.
         /// </remarks>
 
@@ -5402,7 +5402,7 @@
         /// <param name="value" optional="true" mayBeNull="true">Value of the navigation property, if any.</param>
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <returns type="Object">
-        ///     Object containing the new Atom link DOM element for the navigation property and the 
+        ///     Object containing the new Atom link DOM element for the navigation property and the
         ///     required data service version for this property.
         /// </returns>
 
@@ -5424,7 +5424,7 @@
             }
         } else {
             href = value.__deferred.uri;
-        };
+        }
 
         var navProp = atomNewElement(dom, "link", [
             atomNewAttribute(dom, "href", href),
@@ -5445,7 +5445,7 @@
         /// <param name="dataItemModel" type="Object" optional="true">Object describing the data item in an OData conceptual schema.</param>
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <returns type="Object">
-        ///     Object containing the new DOM element in the appropriate namespace for the data item and the 
+        ///     Object containing the new DOM element in the appropriate namespace for the data item and the
         ///     required data service version for it.
         /// </returns>
 
@@ -5455,7 +5455,7 @@
 
         var dataElement = xmlNewODataDataElement(dom, name, value, dataItemMetadata, dataItemModel, model);
         if (!dataElement) {
-            // This may be a navigation property. 
+            // This may be a navigation property.
             var navPropKind = navigationPropertyKind(value, dataItemModel);
 
             dataElement = atomNewODataNavigationProperty(dom, name, navPropKind, value, model);
@@ -5556,8 +5556,8 @@
             if (name !== "__metadata") {
                 var entryDataItemMetadata = propertiesMetadata[name] || {};
                 var entryDataItemModel = entityType && (
-                    lookupProperty(entityType.property, name)
-                     || lookupProperty(entityType.navigationProperty, name));
+                    lookupProperty(entityType.property, name) ||
+                    lookupProperty(entityType.navigationProperty, name));
 
                 var entryDataItem = atomNewODataEntryDataItem(dom, name, data[name], entryDataItemMetadata, entryDataItemModel, model);
                 if (entryDataItem) {
@@ -5568,7 +5568,7 @@
                     dataServiceVersion = maxVersion(dataServiceVersion, entryDataItem.dsv);
                 }
             }
-        };
+        }
 
         atomApplyAllFeedCustomizations(entityType, model, function (customization) {
             var customizationDsv = atomEntryCustomization(dom, entry, properties, customization);
@@ -5722,7 +5722,7 @@
             /*elements*/["String*", "Int*", "Float*", "Decimal*", "Bool*", "DateTime*", "DateTimeOffset*", "Guid*", "Binary*", "Time*", "Collection*", "Record*"]
             ),
             CollectionType: schemaElement(
-            /*attributes*/["ElementType", "Nullable", "DefaultValue", "MaxLength", "FixedLength", "Precision", "Scale", "Unicode", "Collation", "SRID"]
+            /*attributes*/["ElementType", "Nullable", "DefaultValue", "MaxLength", "FixedLength", "Precision", "Scale", "Unicode", "Collation", "SRID"],
             /*elements*/["CollectionType", "ReferenceType", "RowType", "TypeRef"]
             ),
             ComplexType: schemaElement(
@@ -5993,12 +5993,12 @@
         /// <param name="nsURI" type="String">Namespace URI to check.</param>
         /// <returns type="Boolean">true if nsURI is a known CSDL namespace; false otherwise.</returns>
 
-        return nsURI === edmNs1
-            || nsURI === edmNs1_1
-            || nsURI === edmNs1_2
-            || nsURI === edmNs2a
-            || nsURI === edmNs2b
-            || nsURI === edmNs3
+        return nsURI === edmNs1 ||
+               nsURI === edmNs1_1 ||
+               nsURI === edmNs1_2 ||
+               nsURI === edmNs2a ||
+               nsURI === edmNs2b ||
+               nsURI === edmNs3;
     };
 
     var parseConceptualModelElement = function (element) {
@@ -6189,8 +6189,8 @@
         /// <param name="dataItemModel" type="Object" optional="true">Object describing the data item in an OData conceptual schema.</param>
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <remarks>
-        ///    This function will first try to get the type name from the data item's value itself if it is a JSON light object; otherwise 
-        ///    it will try to get it from the odata.type annotation applied to the data item in the container. Then, it will fallback to the data item model. 
+        ///    This function will first try to get the type name from the data item's value itself if it is a JSON light object; otherwise
+        ///    it will try to get it from the odata.type annotation applied to the data item in the container. Then, it will fallback to the data item model.
         ///    If all attempts fail, it will return null.
         /// </remarks>
         /// <returns type="String">Data item type name; null if the type name cannot be found.</returns>
@@ -6283,7 +6283,7 @@
 
     var jsonLightApplyPayloadODataAnnotation = function (name, target, targetType, value, data, obj, baseURI) {
         /// <summary>
-        ///   Processes a JSON Light payload OData annotation producing either a property, payload metadata, or property metadata on its owner object. 
+        ///   Processes a JSON Light payload OData annotation producing either a property, payload metadata, or property metadata on its owner object.
         /// </summary>
         /// <param name="name" type="String">Annotation name.</param>
         /// <param name="target" type="String">Name of the property that is being targeted by the annotation.</param>
@@ -6316,7 +6316,7 @@
 
     var jsonLightApplyMetadataAnnotation = function (name, target, value, obj, baseURI) {
         /// <summary>
-        ///    Converts a JSON light annotation that applies to entry metadata only (i.e. odata.editLink or odata.readLink) and its value 
+        ///    Converts a JSON light annotation that applies to entry metadata only (i.e. odata.editLink or odata.readLink) and its value
         ///    into their library's internal representation and saves it back to data.
         /// </summary>
         /// <param name="name" type="String">Annotation name.</param>
@@ -6354,7 +6354,7 @@
 
     var jsonLightApplyFeedAnnotation = function (name, target, value, obj, baseURI) {
         /// <summary>
-        ///    Converts a JSON light annotation that applies to feeds only (i.e. odata.count or odata.nextlink) and its value 
+        ///    Converts a JSON light annotation that applies to feeds only (i.e. odata.count or odata.nextlink) and its value
         ///    into their library's internal representation and saves it back to data.
         /// </summary>
         /// <param name="name" type="String">Annotation name.</param>
@@ -6370,7 +6370,7 @@
 
     var jsonLightApplyMediaAnnotation = function (name, target, targetType, value, obj, baseURI) {
         /// <summary>
-        ///    Converts a JSON light media annotation in and its value into their library's internal representation 
+        ///    Converts a JSON light media annotation in and its value into their library's internal representation
         ///    and saves it back to data or metadata.
         /// </summary>
         /// <param name="name" type="String">Annotation name.</param>
@@ -6403,7 +6403,7 @@
 
     var jsonLightApplyNavigationUrlAnnotation = function (name, target, targetType, value, data, obj, baseURI) {
         /// <summary>
-        ///    Converts a JSON light navigation property annotation and its value into their library's internal representation 
+        ///    Converts a JSON light navigation property annotation and its value into their library's internal representation
         ///    and saves it back to data o metadata.
         /// </summary>
         /// <param name="name" type="String">Annotation name.</param>
@@ -6420,8 +6420,8 @@
         var uri = normalizeURI(value, baseURI);
 
         if (data.hasOwnProperty(target)) {
-            // The navigation property is inlined in the payload, 
-            // so the navigation link url should be pushed to the object's 
+            // The navigation property is inlined in the payload,
+            // so the navigation link url should be pushed to the object's
             // property metadata instead.
             propertyMetadata.navigationLinkUrl = uri;
             return;
@@ -6475,9 +6475,9 @@
         }
 
         if (recognizeDates) {
-            return parseDateTime(value, /*nullOnError*/true)
-                || parseDateTimeOffset(value, /*nullOnError*/true)
-                || value;
+            return parseDateTime(value, /*nullOnError*/true) ||
+                   parseDateTimeOffset(value, /*nullOnError*/true) ||
+                   value;
         }
         return value;
     };
@@ -6626,9 +6626,9 @@
                     var propertyMetadata = propertiesMetadata[name] = propertiesMetadata[name] || { type: propertyType };
                     if (isNavigationProperty) {
                         propertyInfo = {};
-                        if (objectInfo.entitySet != undefined) {
+                        if (objectInfo.entitySet !== undefined) {
                             var navigationPropertyEntitySetName = lookupNavigationPropertyEntitySet(propertyModel, objectInfo.entitySet.name, model);
-                            var propertyInfo = getEntitySetInfo(navigationPropertyEntitySetName, model);
+                            propertyInfo = getEntitySetInfo(navigationPropertyEntitySetName, model);
                         }
                         propertyInfo.contentTypeOdata = objectInfo.contentTypeOdata;
                         propertyInfo.kind = objectInfo.kind;
@@ -6653,9 +6653,9 @@
         /// <param name="model" type="Object" optional="true">Object describing an OData conceptual schema.</param>
         /// <remarks>
         ///     Actions and functions have the same representation in json light, so to disambiguate them the function uses
-        ///     the model object.  If available, the function will look for the functionImport object that describes the 
-        ///     the action or the function.  If for whatever reason the functionImport can't be retrieved from the model (like 
-        ///     there is no model available or there is no functionImport within the model), then the value is going to be treated 
+        ///     the model object.  If available, the function will look for the functionImport object that describes the
+        ///     the action or the function.  If for whatever reason the functionImport can't be retrieved from the model (like
+        ///     there is no model available or there is no functionImport within the model), then the value is going to be treated
         ///     as an advertised action and stored under obj.__metadata.actions.
         /// </remarks>
 
@@ -6677,7 +6677,7 @@
             if (functionImport && !!functionImport.isSideEffecting) {
                 isFunction = !parseBool(functionImport.isSideEffecting);
             }
-        };
+        }
 
         var metadata = obj.__metadata;
         var targetName = isFunction ? "functions" : "actions";
@@ -6735,9 +6735,10 @@
 
         var entityInstanceKey;
         var entityKeys = entityModel.key.propertyRef;
+        var type;
         entityInstanceKey = "(";
         if (entityKeys.length == 1) {
-            var type = lookupProperty(entityModel.property, entityKeys[0].name).type;
+            type = lookupProperty(entityModel.property, entityKeys[0].name).type;
             entityInstanceKey += formatLiteral(data[entityKeys[0].name], type);
         } else {
             var first = true;
@@ -6793,8 +6794,9 @@
         /// <param name="baseTypeModel" type="Object"  optional="true">Object describing an OData conceptual schema of the baseType if it exists.</param>
         /// <returns type="string">Etag value</returns>
         var etag = "";
+        var propertyModel;
         for (var i = 0; entityModel.property && i < entityModel.property.length; i++) {
-            var propertyModel = entityModel.property[i];
+            propertyModel = entityModel.property[i];
             etag = jsonLightAppendValueToEtag(data, etag, propertyModel);
 
         }
@@ -6840,13 +6842,14 @@
 
         var navigationLinkAnnotation = "@odata.navigationLinkUrl";
         var associationLinkAnnotation = "@odata.associationLinkUrl";
+        var navigationPropertyName, navigationPropertyAnnotation, associationPropertyAnnotation;
         for (var i = 0; entityModel.navigationProperty && i < entityModel.navigationProperty.length; i++) {
-            var navigationPropertyName = entityModel.navigationProperty[i].name;
-            var navigationPropertyAnnotation = navigationPropertyName + navigationLinkAnnotation;
+            navigationPropertyName = entityModel.navigationProperty[i].name;
+            navigationPropertyAnnotation = navigationPropertyName + navigationLinkAnnotation;
             if (data[navigationPropertyAnnotation] === undefined) {
                 data[navigationPropertyAnnotation] = data[jsonLightAnnotations.edit] + "/" + encodeURIComponent(navigationPropertyName);
             }
-            var associationPropertyAnnotation = navigationPropertyName + associationLinkAnnotation;
+            associationPropertyAnnotation = navigationPropertyName + associationLinkAnnotation;
             if (data[associationPropertyAnnotation] === undefined) {
                 data[associationPropertyAnnotation] = data[jsonLightAnnotations.edit] + "/$links/" + encodeURIComponent(navigationPropertyName);
             }
@@ -6923,7 +6926,7 @@
         for (var i = 0; i < functionImport.length; i++) {
             if (functionImport[i].isBindable && functionImport[i].parameter[0] && functionImport[i].parameter[0].type == entryInfo.entitySet.entityType) {
                 var functionImportAnnotation = "#" + entryInfo.containerName + "." + functionImport[i].name;
-                if (data[functionImportAnnotation] == undefined) {
+                if (data[functionImportAnnotation] === undefined) {
                     data[functionImportAnnotation] = {
                         title: functionImport[i].name,
                         target: data[jsonLightAnnotations.edit] + "/" + functionImport[i].name
@@ -7076,13 +7079,13 @@
         /// <param name="model" type="Object">Object describing an OData conceptual schema.</param>
         /// <param name="inferFeedAsComplexType" type="Boolean">True if a JSON light payload that looks like a feed should be treated as a complex type property instead.</param>
         /// <remarks>
-        ///     If the arguments passed to the function don't convey enough information about the payload to determine without doubt that the payload is a feed then it 
-        ///     will try to use the payload object structure instead.  If the payload looks like a feed (has value property that is an array or non-primitive values) then 
-        ///     the function will report its kind as PAYLOADTYPE_FEED unless the inferFeedAsComplexType flag is set to true. This flag comes from the user request 
-        ///     and allows the user to control how the library behaves with an ambigous JSON light payload. 
+        ///     If the arguments passed to the function don't convey enough information about the payload to determine without doubt that the payload is a feed then it
+        ///     will try to use the payload object structure instead.  If the payload looks like a feed (has value property that is an array or non-primitive values) then
+        ///     the function will report its kind as PAYLOADTYPE_FEED unless the inferFeedAsComplexType flag is set to true. This flag comes from the user request
+        ///     and allows the user to control how the library behaves with an ambigous JSON light payload.
         /// </remarks>
         /// <returns type="Object">
-        ///     Object with kind and type fields. Null if there is no metadata annotation or the payload info cannot be obtained.. 
+        ///     Object with kind and type fields. Null if there is no metadata annotation or the payload info cannot be obtained..
         /// </returns>
 
         var metadataUri = data[metadataAnnotation];
@@ -7139,9 +7142,9 @@
                     entityType = !!entitySet ? entitySet.entityType : null;
                 }
             }
-
+            var info;
             if (elementStart > 0) {
-                var info = jsonLightMakePayloadInfo(PAYLOADTYPE_OBJECT, entityType);
+                info = jsonLightMakePayloadInfo(PAYLOADTYPE_OBJECT, entityType);
                 info.entitySet = entitySet;
                 info.functionImport = functionImport;
                 info.containerName = containerName;
@@ -7350,7 +7353,7 @@
 
         if (isFeed(value)) {
             data[name] = [];
-            // Format each of the inline feed entries 
+            // Format each of the inline feed entries
             var entries = isArray(value) ? value : value.results;
             var i, len;
             for (i = 0, len = entries.length; i < len; i++) {
@@ -7409,7 +7412,12 @@
         /// <param name="data" type="Object">Object on which the annotation is going to be stored.</param>
 
         if (value !== undefined) {
-            target ? data[target + "@" + qName] = value : data[qName] = value;
+            if(target) {
+                data[target + "@" + qName] = value;
+            }
+            else {
+                data[qName] = value;
+            }
         }
     };
 
@@ -7424,7 +7432,7 @@
         /// <returns type="Array">Array of objects containing metadata for the actions or functions specified in value.</returns>
 
         var result = [];
-        for (name in value) {
+        for (var name in value) {
             var i, len;
             for (i = 0, len = value[name].length; i < len; i++) {
                 result.push(extend({ metadata: name }, value[name][i]));
@@ -7458,7 +7466,7 @@
             }
 
             var dataType = lookupEntityType(dataTypeName, metadata) || lookupComplexType(dataTypeName, metadata);
-
+            var propertyValue;
             if (dataType) {
                 var properties = dataType.property;
                 if (properties) {
@@ -7466,7 +7474,7 @@
                     for (i = 0, len = properties.length; i < len; i++) {
                         var property = properties[i];
                         var propertyName = property.name;
-                        var propertyValue = value[propertyName];
+                        propertyValue = value[propertyName];
 
                         if (property.type === "Edm.DateTime" || property.type === "Edm.DateTimeOffset") {
                             if (propertyValue) {
@@ -7531,7 +7539,7 @@
     //
     // This first number is date ticks, the + may be a - and is optional,
     // with the second number indicating a timezone offset in minutes.
-    // 
+    //
     // On the wire, the leading and trailing forward slashes are
     // escaped without being required to so the chance of collisions is reduced;
     // however, by the time we see the objects, the characters already
@@ -7588,7 +7596,7 @@
     };
 
     // Some JSON implementations cannot produce the character sequence \/
-    // which is needed to format DateTime and DateTimeOffset into the 
+    // which is needed to format DateTime and DateTimeOffset into the
     // JSON string representation defined by the OData protocol.
     // See the history of this file for a candidate implementation of
     // a 'formatJsonDateString' function.
@@ -7627,7 +7635,7 @@
         /// <param name="data">Data to serialize.</param>
         /// <returns type="String">The JSON string representation of data.</returns>
 
-        var result = undefined;
+        var result; // = undefined;
         // Save the current date.toJSON function
         var dateToJSON = Date.prototype.toJSON;
         try {
@@ -7675,7 +7683,7 @@
         /// <param value type="Object">Value to convert.</param>
         /// <returns type="String">JSON representation of the input value.</returns>
         /// <remarks>
-        ///   This method is used during JSON serialization and invoked only by the JSON.stringify function. 
+        ///   This method is used during JSON serialization and invoked only by the JSON.stringify function.
         ///   It should never be called directly.
         /// </remarks>
 
@@ -7800,7 +7808,7 @@
 
     var readBatch = function (text, context) {
         /// <summary>
-        /// Parses a multipart/mixed response body from from the position defined by the context. 
+        /// Parses a multipart/mixed response body from from the position defined by the context.
         /// </summary>
         /// <param name="text" type="String" optional="false">Body of the multipart/mixed response.</param>
         /// <param name="context">Context used for parsing.</param>
@@ -7821,11 +7829,11 @@
         while (partEnd !== "--" && context.position < text.length) {
             var partHeaders = readHeaders(text, context);
             var partContentType = contentType(partHeaders["Content-Type"]);
-
+            var changeResponses;
             if (partContentType && partContentType.mediaType === batchMediaType) {
                 context.boundaries.push(partContentType.properties["boundary"]);
                 try {
-                    var changeResponses = readBatch(text, context);
+                    changeResponses = readBatch(text, context);
                 } catch (e) {
                     e.response = readResponse(text, context, delimiter);
                     changeResponses = [e];
@@ -7865,7 +7873,7 @@
 
     var readHeaders = function (text, context) {
         /// <summary>
-        /// Parses the http headers in the text from the position defined by the context.  
+        /// Parses the http headers in the text from the position defined by the context.
         /// </summary>
         /// <param name="text" type="String" optional="false">Text containing an http response's headers</param>
         /// <param name="context">Context used for parsing.</param>
@@ -7898,14 +7906,14 @@
 
     var readResponse = function (text, context, delimiter) {
         /// <summary>
-        /// Parses an HTTP response. 
+        /// Parses an HTTP response.
         /// </summary>
         /// <param name="text" type="String" optional="false">Text representing the http response.</param>
         /// <param name="context" optional="false">Context used for parsing.</param>
         /// <param name="delimiter" type="String" optional="false">String used as delimiter of the multipart response parts.</param>
         /// <returns>Object representing the http response.</returns>
 
-        // Read the status line. 
+        // Read the status line.
         var pos = context.position;
         var match = responseStatusRegex.exec(readLine(text, context));
 
@@ -8012,7 +8020,7 @@
 
     var writeBatchPart = function (part, context, nested) {
         /// <summary>
-        /// Serializes a part of a batch request to a string. A part can be either a GET request or 
+        /// Serializes a part of a batch request to a string. A part can be either a GET request or
         /// a change set grouping several CUD (create, update, delete) requests.
         /// </summary>
         /// <param name="part" optional="false">Request or change set object in payload representation format</param>
@@ -8220,7 +8228,7 @@
         /// <param value="Object">Object to convert.</param>
         /// <returns type="Date">Date object.</returns>
         /// <remarks>
-        ///   This method is used during JSON parsing and invoked only by the reviver function. 
+        ///   This method is used during JSON parsing and invoked only by the reviver function.
         ///   It should never be called directly.
         /// </remarks>
 
@@ -8361,7 +8369,7 @@
                 } else {
                     i++;
                 }
-            };
+            }
             delay(success);
         }
         catch (e) {
@@ -8567,7 +8575,7 @@
                 }
 
                 // The database doesn't have the expected store.
-                // Fabricate an error object for the event for the schema mismatch 
+                // Fabricate an error object for the event for the schema mismatch
                 // and error out.
                 event.target.error = { name: "DBSchemaMismatch" };
                 error(event);
@@ -8576,7 +8584,7 @@
 
             db.onversionchange = function (event) {
                 event.target.close();
-            }
+            };
             success(db);
         };
     };
@@ -8762,7 +8770,7 @@
                 var cursor = event.target.result;
                 if (cursor) {
                     results.push(cursor.key);
-                    // Some tools have issues because continue is a javascript reserved word. 
+                    // Some tools have issues because continue is a javascript reserved word.
                     cursor["continue"].call(cursor);
                 }
             };
@@ -8794,15 +8802,19 @@
                 }
             };
 
-            for (var i = 0; i < keys.length; i++) {
-                // Some tools have issues because get is a javascript reserved word. 
-                var objectStore = transaction.objectStore(name);
-                var request = objectStore["get"].call(objectStore, keys[i]);
-                request.onsuccess = function (event) {
+            function make_handler (event) {
+                return function () {
                     var record = event.target.result;
                     values.push(record ? record.v : undefined);
                 };
             }
+
+            for (var i = 0; i < keys.length; i++) {
+                // Some tools have issues because get is a javascript reserved word.
+                var objectStore = transaction.objectStore(name);
+                var request = objectStore["get"].call(objectStore, keys[i]);
+                request.onsuccess = make_handler(event);
+            }
         }, error);
     };
 
@@ -8822,7 +8834,7 @@
             };
 
             for (var i = 0; i < keys.length; i++) {
-                // Some tools have issues because continue is a javascript reserved word. 
+                // Some tools have issues because continue is a javascript reserved word.
                 var objectStore = transaction.objectStore(name);
                 objectStore["delete"].call(objectStore, keys[i]);
             }
@@ -8858,11 +8870,8 @@
                 }
             };
 
-            for (var i = 0; i < keys.length && i < values.length; i++) {
-                var request = transaction.objectStore(name).openCursor(IDBKeyRange.only(keys[i]));
-                var record = { v: values[i] };
-                request.pair = { key: keys[i], value: record };
-                request.onsuccess = function (event) {
+            function make_handler (event) {
+                return function () {
                     var cursor = event.target.result;
                     if (cursor) {
                         cursor.update(event.target.pair.value);
@@ -8871,6 +8880,13 @@
                     }
                 };
             }
+
+            for (var i = 0; i < keys.length && i < values.length; i++) {
+                var request = transaction.objectStore(name).openCursor(IDBKeyRange.only(keys[i]));
+                var record = { v: values[i] };
+                request.pair = { key: keys[i], value: record };
+                request.onsuccess = make_handler(event);
+            }
         }, error);
     };
 
@@ -9223,7 +9239,7 @@
 
         var that = this;
         var uri = options.source;
-        
+
         that.identifier = normalizeURICase(encodeURI(decodeURI(uri)));
         that.options = options;
 
@@ -9381,7 +9397,7 @@
         return { i: lowIndex, c: highIndex - lowIndex };
     };
 
-    // The DataCache is implemented using state machines.  The following constants are used to properly 
+    // The DataCache is implemented using state machines.  The following constants are used to properly
     // identify and label the states that these machines transition to.
 
     // DataCache state constants
@@ -9393,7 +9409,7 @@
     var CACHE_STATE_PREFETCH = "prefetch";
     var CACHE_STATE_WRITE = "write";
 
-    // DataCacheOperation state machine states.  
+    // DataCacheOperation state machine states.
     // Transitions on operations also depend on the cache current of the cache.
 
     var OPERATION_STATE_CANCEL = "cancel";
@@ -9406,7 +9422,7 @@
 
     var DESTROY_STATE_CLEAR = "clear";
 
-    // Read / Prefetch state machine states 
+    // Read / Prefetch state machine states
 
     var READ_STATE_DONE = "done";
     var READ_STATE_LOCAL = "local";
@@ -9477,7 +9493,7 @@
 
         that.run = function (state) {
             /// <summary>Executes the operation's current state in the context of a new cache state.</summary>
-            /// <param name="state" type="Object">New cache state.</param> 
+            /// <param name="state" type="Object">New cache state.</param>
 
             cacheState = state;
             that.transition(that.s, stateData);
@@ -9493,7 +9509,7 @@
             /// <summary>State machine that describes all operations common behavior.</summary>
             /// <param name="opTargetState" type="Object">Operation state to transition to.</param>
             /// <param name="cacheState" type="Object">Current cache state.</param>
-            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param> 
+            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param>
 
             switch (opTargetState) {
                 case OPERATION_STATE_START:
@@ -9504,7 +9520,7 @@
                     break;
 
                 case OPERATION_STATE_WAIT:
-                    // Wait state indicating that the operation is active but waiting for an asynchronous operation to complete. 
+                    // Wait state indicating that the operation is active but waiting for an asynchronous operation to complete.
                     stateMachine(that, opTargetState, cacheState, data);
                     break;
 
@@ -9516,7 +9532,7 @@
                     break;
 
                 case OPERATION_STATE_ERROR:
-                    // Error state. Data is expected to be an object detailing the error condition.  
+                    // Error state. Data is expected to be an object detailing the error condition.
                     stateMachine(that, opTargetState, cacheState, data);
                     that.canceled = true;
                     that.fireRejected(data);
@@ -9544,7 +9560,7 @@
         var transition = function (state, data) {
             /// <summary>Transitions this operation to a new state.</summary>
             /// <param name="state" type="Object">State to transition the operation to.</param>
-            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param> 
+            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param>
 
             that.s = state;
             stateData = data;
@@ -9673,7 +9689,7 @@
         that.clear = function () {
             /// <summary>Cancels all running operations and clears all local data associated with this cache.</summary>
             /// <remarks>
-            /// New read requests made while a clear operation is in progress will not be canceled. 
+            /// New read requests made while a clear operation is in progress will not be canceled.
             /// Instead they will be queued for execution once the operation is completed.
             /// </remarks>
             /// <returns type="Object">A promise that has no value and can't be canceled.</returns>
@@ -9720,7 +9736,7 @@
             /// <param name="index" type="Number">Zero-based index of record range to read.</param>
             /// <param name="count" type="Number">Number of records in the range.</param>
             /// <remarks>
-            /// New read requests made while a clear operation is in progress will not be canceled. 
+            /// New read requests made while a clear operation is in progress will not be canceled.
             /// Instead they will be queued for execution once the operation is completed.
             /// </remarks>
             /// <returns type="DjsDeferred">
@@ -9799,7 +9815,7 @@
             /// <param name="message" type="String">Message text.</param>
             /// <returns type="Function">Function to use as error callback.</returns>
             /// <remarks>
-            /// This function will specifically handle problems with critical store resources 
+            /// This function will specifically handle problems with critical store resources
             /// during cache initialization.
             /// </remarks>
 
@@ -9957,7 +9973,7 @@
                                         item: item
                                     };
 
-                                    backwards ? arr.unshift(element) : arr.push(element);
+                                    ignore = backwards ? arr.unshift(element) : arr.push(element);
                                 }
                             }
 
@@ -10007,7 +10023,7 @@
             /// This method is a no-op if any of the following conditions is true:
             ///     1.- prefetchSize is 0
             ///     2.- All data has been read and stored locally in the cache.
-            ///     3.- There is already an all data prefetch operation queued. 
+            ///     3.- There is already an all data prefetch operation queued.
             ///     4.- The cache has run out of available space (overflowed).
             /// <remarks>
 
@@ -10017,7 +10033,7 @@
 
 
             if (prefetchOperations.length === 0 || (prefetchOperations[0] && prefetchOperations[0].c !== -1)) {
-                // Merging prefetch operations would be a nice optimization here. 
+                // Merging prefetch operations would be a nice optimization here.
                 var op = new DataCacheOperation(prefetchStateMachine, null, true, start, prefetchSize, null, prefetchSize);
                 queueAndStart(op, prefetchOperations);
             }
@@ -10134,7 +10150,7 @@
             /// <param name="message" type="String">Message text.</param>
             /// <returns type="Function">Function to use as error callback.</returns>
             /// <remarks>
-            /// This function will specifically handle problems when interacting with the store. 
+            /// This function will specifically handle problems when interacting with the store.
             /// </remarks>
 
             return function (/*error*/) {
@@ -10182,7 +10198,7 @@
             /// <param name="operation" type="DataCacheOperation">Operation being run.</param>
             /// <param name="opTargetState" type="Object">Operation state to transition to.</param>
             /// <param name="cacheState" type="Object">Current cache state.</param>
-            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param> 
+            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param>
             /// <remarks>
             /// This state machine contains behavior common to read and prefetch operations.
             /// </remarks>
@@ -10206,7 +10222,7 @@
             /// <param name="opTargetState" type="Object">Operation state to transition to.</param>
             /// <param name="cacheState" type="Object">Current cache state.</param>
             /// <remarks>
-            /// Clear operations have the highest priority and can't be interrupted by other operations; however, 
+            /// Clear operations have the highest priority and can't be interrupted by other operations; however,
             /// they will preempt any other operation currently executing.
             /// </remarks>
 
@@ -10250,13 +10266,13 @@
             /// <param name="operation" type="DataCacheOperation">Operation being run.</param>
             /// <param name="opTargetState" type="Object">Operation state to transition to.</param>
             /// <param name="cacheState" type="Object">Current cache state.</param>
-            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param> 
+            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param>
             /// <remarks>
-            /// Prefetch operations have the lowest priority and will be interrupted by operations of 
-            /// other kinds. A preempted prefetch operation will resume its execution only when the state 
+            /// Prefetch operations have the lowest priority and will be interrupted by operations of
+            /// other kinds. A preempted prefetch operation will resume its execution only when the state
             /// of the cache returns to idle.
-            /// 
-            /// If a clear operation starts executing then all the prefetch operations are canceled, 
+            ///
+            /// If a clear operation starts executing then all the prefetch operations are canceled,
             /// even if they haven't started executing yet.
             /// </remarks>
 
@@ -10265,7 +10281,7 @@
 
                 var transition = operation.transition;
 
-                // Handle preemption 
+                // Handle preemption
                 if (cacheState !== CACHE_STATE_PREFETCH) {
                     if (cacheState === CACHE_STATE_DESTROY) {
                         if (opTargetState !== OPERATION_STATE_CANCEL) {
@@ -10318,15 +10334,15 @@
             /// <param name="operation" type="DataCacheOperation">Operation being run.</param>
             /// <param name="opTargetState" type="Object">Operation state to transition to.</param>
             /// <param name="cacheState" type="Object">Current cache state.</param>
-            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param> 
+            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param>
             /// <remarks>
-            /// Read operations have a higher priority than prefetch operations, but lower than 
-            /// clear operations. They will preempt any prefetch operation currently running 
+            /// Read operations have a higher priority than prefetch operations, but lower than
+            /// clear operations. They will preempt any prefetch operation currently running
             /// but will be interrupted by a clear operation.
-            /// 
-            /// If a clear operation starts executing then all the currently running 
-            /// read operations are canceled. Read operations that haven't started yet will 
-            /// wait in the start state until the destory operation finishes. 
+            ///
+            /// If a clear operation starts executing then all the currently running
+            /// read operations are canceled. Read operations that haven't started yet will
+            /// wait in the start state until the destory operation finishes.
             /// </remarks>
 
             // Handle cancelation
@@ -10397,7 +10413,7 @@
             /// <param name="operation" type="DataCacheOperation">Operation being run.</param>
             /// <param name="opTargetState" type="Object">Operation state to transition to.</param>
             /// <param name="cacheState" type="Object">Current cache state.</param>
-            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param> 
+            /// <param name="data" type="Object" optional="true">Additional data passed to the state.</param>
             /// <param name="isPrefetch" type="Boolean">Flag indicating whether a read (false) or prefetch (true) operation is running.
             /// <remarks>
             /// This state machine contains behavior common to read and prefetch operations.
@@ -10473,7 +10489,7 @@
             }
 
             if (request) {
-                // The operation might have been canceled between stack frames do to the async calls.  
+                // The operation might have been canceled between stack frames do to the async calls.
                 if (operation.canceled) {
                     request.cancel();
                 } else if (operation.s === opTargetState) {
