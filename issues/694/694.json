{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi, I am using new WCF Data Service 5 (OData 3) with properties which expands if they are some type. On the service I set MaxProtocolVersion = DataServiceProtocolVersion.V3, on client I got the errorr.",
    "LastUpdatedDate": "2013-02-21T17:20:08.8-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "datajs",
    "ReportedDate": "2012-06-07T05:34:14.35-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Exception: MaxDataServiceVersion '2.0' is too low for the response.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 694
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi Slava_pvf,\r\n\r\n   DataJS is an OData V2 client at this point and it will add the MaxDataServiceVersion header set to 2.0 to the request.  Seems that you are requesting a resource that is using OData V3 featrues; hence the server failing.  You have to options here:\r\n\r\n1. Override the value of the MaxDataServiceVersion when making the request in datajs:\r\n\r\n    OData.read({\r\n        requestUri:\"http://myserver/myservice.svc/collection\",\r\n        headers: {\r\n             MaxDataServiceVersion: 3.0\r\n        }\r\n    }, \r\n    function (data, response) {\r\n        // success handler\r\n    },\r\n    function (err) {\r\n       // error handler\r\n    });\r\n\r\n  2. Downgrade your service to be OData V2 instead.  Use this option if you  don't need to use any of the OData V3 features.\r\n\r\nKeep in mind that if you go with option one and use ATOM protocol it may not work as expected because the ATOM parser currently doesn't support any OData V3 constructs. Your safest bet is to use JSON in this case.\r\n\r\nBy the way, we should move this to the discussios section instead :) ",
      "PostedDate": "2012-06-12T14:48:35.66-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Guys!\r\nI've installed version 1.1.3 - and it stops working with my WCF TCP5 Service, when I use batch update (I include    MaxDataServiceVersion: 3.0 header to request and it passed to the server but seems server doesn't understand batch format of you current release), since I have to rollback. \r\nWhen do you think release new version which could support  OData v3\r\nThanks.",
      "PostedDate": "2012-06-18T23:31:03.587-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-06-18T23:31:10.843-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Baio,\r\n\r\n  Can you post a network trace of the request and the response from the server.  As for an update release with OData V3 features.  We are doing some work around it, but we currently have a release date yet. Stay tuned for updates :)\r\n\r\nThanks.",
      "PostedDate": "2012-06-21T00:24:22.5-07:00",
      "Id": -2147483648
    },
    {
      "Message": "*Currently DON'T have a release date yet. ",
      "PostedDate": "2012-06-21T00:25:12.6-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:20:08.8-08:00",
      "Id": -2147483648
    }
  ]
}