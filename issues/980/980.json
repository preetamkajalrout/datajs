{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hello Guys,\n\nI tried to parse the JSON light formatted result of batch query using an OData v3 endpoint, but the result wasn't been processed as I expected. I get a 'no handler for data' error message.\n\nI created a unit test to reproduce the scenario. Do you have any idea what's wrong?\nThank you for your help,\nRobert\n\n```\n<script type=\"text/javascript\">\n        test('jsonlight batch', 6, function () {\n            stop();\n            \n            OData.request({\n                requestUri: 'endpoints/FoodStoreDataServiceV3.svc/$batch',\n                method: 'POST',\n                data: {\n                    __batchRequests: [{\n                        __changeRequests: [\n                          {\n                              headers: {\n                                  \"Content-Id\": 1,\n                                  MaxDataServiceVersion: '3.0',\n                                  DataServiceVersion: '3.0'\n                              },\n                              method: 'POST',\n                              requestUri: 'Categories',\n                              data: { Name: 'Fruits' }\n                          },\n                          {\n                              headers: {\n                                  \"Content-Id\": 2,\n                                  MaxDataServiceVersion: '3.0',\n                                  DataServiceVersion: '3.0'\n                              },\n                              method: 'POST',\n                              requestUri: 'Categories',\n                              data: { Name: 'Fruits2' }\n                          }\n                        ]\n                    }]\n                }\n            }, function (data) {\n            \n                var items = data.__batchResponses[0].__changeResponses;\n                for (var i = 0; i < items.length; i++) {\n                    notEqual(items[i].message, 'no handler for data', 'result parse error');\n\n                    if (items[i].data) {\n                        equal(typeof items[i].data.Name, 'string');\n                        equal(typeof items[i].data.CategoryID, 'number');\n                    }\n                }\n                start();\n            }, function (data) {\n                ok(false, 'error');\n                start();\n            }, OData.batchHandler);\n        });\n    </script>\n\n```\n\nMaybe the problem is in the createReadWriteContext function. ‘context’ variable already contains ‘contentType’ and ‘dataServiceVersion’ properties, so after the extend call the ‘rwContext’ will contain the original values.",
    "LastUpdatedDate": "2013-06-14T00:31:44.117-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "datajs",
    "ReportedDate": "2013-03-05T07:01:32.863-08:00",
    "Status": {
      "Name": "Resolved",
      "Id": 7
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Parsing JSON light result of batch queries over OData v3",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 980
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hi,\nAs you mentioned after the extend method call in createReadWriteContext, the original values are overridden which causes the DataServiceVersion to be 1.0.\nThe fix will be as simple as first a call to extend for context and then a call to extend the Original values of rwContext, It will be out in the next release.\r\n\r\n-----\nThanks,\nHussein",
      "PostedDate": "2013-03-06T08:51:28.573-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-04-04T10:17:31.78-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-04-09T14:11:00.447-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks for the fix, it's working fine in 1.1.1b. Awesome!",
      "PostedDate": "2013-05-13T02:16:06.833-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:44:26.81-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:44:27.347-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-06-14T00:31:44.117-07:00",
      "Id": -2147483648
    }
  ]
}