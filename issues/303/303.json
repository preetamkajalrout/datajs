{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I recently wrote a couple of apps using datajs, when testing on my Android 2.2 Webkit 3.1 phone wasn't able to get data back, but was able to with Firefox 4 for Android.\n \nI did a similar test on Android SDK and got the same results. Can confirm that other JSONP calls work as expected.\n \nAnalyzing OData.Read on fiddler I see the following on firefox\n1. handleJSONP_0({\n2. \"d\" : [\n \non Webkit\n1. machine code\n2. \"d\" : [\n \nHope it helps.\n \nCheers\njasper_07",
    "LastUpdatedDate": "2013-06-14T00:31:45.95-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "datajs",
    "ReportedDate": "2011-05-09T00:49:49.087-07:00",
    "Status": {
      "Name": "Resolved",
      "Id": 7
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Problem with Android default browser",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 303
  },
  "FileAttachments": [
    {
      "FileId": 88,
      "FileName": "RawFile_netflix.txt",
      "DownloadUrl": ".\\88"
    }
  ],
  "Comments": [
    {
      "Message": "attached request and response (uncompressed) of unsuccessful and successful calls",
      "PostedDate": "2011-05-09T05:28:24.1-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-05-09T05:30:11.78-07:00",
      "Id": -2147483648
    },
    {
      "Message": "The issue is because the OData service is sending the response to the JSONP request with the wrong ecoding.  We are working to fix this problem on the server side and will roll out a fix for the code gallery extension first.",
      "PostedDate": "2011-06-20T13:18:34.097-07:00",
      "Id": -2147483648
    },
    {
      "Message": "The fix has been updated with v0.3 release of the JSONP behavior at http://archive.msdn.microsoft.com/DataServicesJSONP. This hasn't been rolled out to all sample services yet, but you can use this on your services to get it working.",
      "PostedDate": "2011-06-24T13:35:08.84-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-06-24T13:35:31.78-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:20:12.857-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:44:30.707-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:44:30.853-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-06-14T00:31:45.95-07:00",
      "Id": -2147483648
    }
  ]
}