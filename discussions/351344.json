[
  {
    "Id": "820469",
    "ThreadId": "351344",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I've created an application using Entity Framework, WCF Data Services, and jquery with knockout and datajs.&nbsp; Originally the Entity models and WCF Data services were in the same project.&nbsp; When I would run things on my local machine, everything worked\r\n fine.&nbsp; I moved everything over to our development web server, and I noticed immediate problems with the WCF Data Services.&nbsp; So, I put the entity models and WCF data services into their own project, and I have them running successfully on the development\r\n web server.&nbsp; However, I still cannot get it to work with my client page.&nbsp; I created a simple test.htm document, stripped out any extraneous things (knockout, jquery-ui, etc.) so that I could test what is going on.&nbsp; When I&nbsp;inspect the HTTP\r\n requests,&nbsp;I am still getting &quot;400 Bad Request&quot; with all of my requests to the web-service.</p>\r\n<p>Here is my page source:</p>\r\n<pre id=\"line1\"><span title=\"Almost standards mode doctype. Expected “&lt;!DOCTYPE html&gt;”.\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><span>\r\n\r\n</span><span>&lt;<span>html</span> <span>xmlns</span>=&quot;<a>http://www.w3.org/1999/xhtml</a>&quot;&gt;</span><span>\r\n</span><span>&lt;<span>head</span>&gt;</span><span>\r\n    </span><span>&lt;<span>title</span>&gt;</span><span>Test</span><span>&lt;/<span>title</span>&gt;</span><span>\r\n    </span><span>&lt;<span>script</span> <span>type</span>=&quot;<a>text/javascript</a>&quot; <span>src</span>=&quot;<a href=\"\">Scripts/jquery-1.4.2.min.js</a>&quot;&gt;</span><span>&lt;/script&gt;</span><span>\r\n    </span><span>&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdnjs.cloudflare.com/ajax/libs/json2/20110223/json2.js&quot;&gt;&lt;/script&gt;</span><span>\r\n    </span><span>&lt;<span>script</span> <span>type</span>=&quot;<a>text/javascript</a>&quot; <span>src</span>=&quot;<a href=\"\">Scripts/datajs-1.0.2.min.js</a>&quot;&gt;</span><span>&lt;/script&gt;</span><span>\r\n</span><span>&lt;/<span>head</span>&gt;</span><span>\r\n</span><span>&lt;<span>body</span>&gt;</span><span>\r\n\r\n</span><span>&lt;<span>script</span> <span>language</span>=&quot;<a>javascript</a>&quot; <span>type</span>=&quot;<a>text/javascript</a>&quot;&gt;</span><span>\r\n    var serviceUrl = &quot;http://myserver:8082/Services/MyService.svc/&quot;;\r\n    OData.defaultHttpClient.enableJsonpCallback = true;\r\n    OData.jsonHandler.recognizeDates = true;\r\n\r\n    var employeeID = 99999;\r\n    var url = this.serviceUrl &#43; &quot;Employee?$filter=EmployeeID eq &quot; &#43; employeeID;\r\n    document.write(&quot;Hello&quot;);\r\n    OData.read(url, function(data) {\r\n        alert(data.results[0].SortName)\r\n    },\r\n    function(err) { alert(err.message); });  \r\n</span><span>&lt;/script&gt;</span><span>\r\n</span><span>&lt;/<span>body</span>&gt;</span><span>\r\n</span><span>&lt;/<span>html</span>&gt;</span></pre>\r\n<pre></pre>\r\n<pre><span>If I use my browser to access the webservice with these parameters, I can access it with no problem.  <a href=\"http://myserver:8082/Services/MyService.svc/Employee?$filter=EmployeeID\">http://myserver:8082/Services/MyService.svc/Employee?$filter=EmployeeID</a> eq 99999 works as expected.  No problems.</span></pre>\r\n<pre><span>However, when I run this page (above), it won't work.  When use Firefox FireBug to inspect the request, it says the URL is:</span></pre>\r\n<pre></pre>\r\n<pre><span><a href=\"http://w03-bosisdev1:8082/Services/TimeReportingService.svc/Employee?$filter=EmployeeID%20eq%2012041&$callback=parent.handleJSONP_0&$format=json\">http://myserver:8082/Services/MyService.svc/Employee?$filter=EmployeeID%20eq%2099999&amp;$callback=parent.handleJSONP_0&amp;$format=json</a></span></pre>\r\n<pre><span>And the Status is &quot;400 Bad Request&quot;.  The Response says:</span></pre>\r\n<pre></pre>\r\n<pre><span><div><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;\r\n</code><code>&lt;error xmlns=&quot;http://schemas.microsoft.com/ado/2007/08/dataservices/metadata&quot;&gt;\r\n</code><code>  &lt;code&gt;&lt;/code&gt;\r\n</code><code>  &lt;message xml:lang=&quot;en-US&quot;&gt;The query parameter '$callback' begins with a system-reserved '$' character</code><code> but is not recognized.&lt;/message&gt;\r\n</code><code>&lt;/error&gt;</code></pre>\r\n</div>\r\n</span></pre>\r\n<pre><span>Is the $callback=parent.handlJSONP_0 supposed to be there?  Any ideas as to why this isn't working?</span></pre>\r\n<pre></pre>\r\n<pre><span>Thanks,</span></pre>\r\n<pre></pre>\r\n<pre><span>Tim</span></pre>\r\n",
    "PostedDate": "2012-04-05T10:07:56.313-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "820484",
    "ThreadId": "351344",
    "Html": "<p>By the way, my web-service code looks like this:</p>\r\n<p>using System;<br />using System.Collections.Generic;<br />using System.Data.Services;<br />using System.Data.Services.Common;<br />using System.Linq;<br />using System.ServiceModel;<br />using System.ServiceModel.Web;<br />using System.Web;<br />using Web.EntityModels;</p>\r\n<p>namespace Web.Services<br />{<br />&nbsp;&nbsp;&nbsp; [ServiceBehavior(IncludeExceptionDetailInFaults = true)]<br />&nbsp;&nbsp;&nbsp; public class MyService : DataService&lt;MyEntities&gt;<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // This method is called only once to initialize service-wide policies.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void InitializeService(DataServiceConfiguration config)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; config.SetEntitySetAccessRule(\"*\", EntitySetRights.All);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; config.DataServiceBehavior.MaxProtocolVersion = DataServiceProtocolVersion.V2;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; }<br />}</p>\r\n<p>The web.config in the project with the web-services looks like this (I obviously excluded the connectionstring):</p>\r\n<p>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;<br />&lt;configuration&gt;<br />&nbsp; &lt;system.web&gt;<br />&nbsp;&nbsp;&nbsp; &lt;compilation debug=\"true\" targetFramework=\"4.0\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;assemblies&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;add assembly=\"System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/assemblies&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/compilation&gt;<br />&nbsp; &lt;/system.web&gt;<br />&nbsp; &lt;connectionStrings&gt;<br />&nbsp;&nbsp;&nbsp; &lt;add name=\"MyEntities\" connectionString=\"...\" providerName=\"System.Data.EntityClient\" /&gt;<br />&nbsp; &lt;/connectionStrings&gt;<br />&nbsp; &lt;system.serviceModel&gt;<br />&nbsp;&nbsp;&nbsp; &lt;serviceHostingEnvironment aspNetCompatibilityEnabled=\"true\" /&gt;<br />&nbsp; &lt;/system.serviceModel&gt;<br />&lt;/configuration&gt;</p>",
    "PostedDate": "2012-04-05T10:55:31.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "820655",
    "ThreadId": "351344",
    "Html": "<p>Hi Tim,</p>\n<p>Your webapp is being served through port 80 right? The fact that your data service&nbsp;is at a different port (8082) makes&nbsp;the request to it a cross domain request. Because of this, datajs is trying to use JSONP to make the request.&nbsp; Out of the box, JSONP is not supported by WCF data services. In order to enable JSONP you can use <a href=\"http://archive.msdn.microsoft.com/DataServicesJSONP\" target=\"_blank\">this </a>extension with your service.</p>\n<p>Regards,</p>\n<p>Alex Trigo.</p>",
    "PostedDate": "2012-04-05T19:06:19.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "820831",
    "ThreadId": "351344",
    "Html": "<p>Hi Alex,</p>\n<p>Thank you for your help.&nbsp; I actually found that very same extension right around the time I received your reply.&nbsp; That <span style=\"text-decoration: underline;\">does </span>fix things.&nbsp; The only downside is that I I also found that <a title=\"Cross Domain Requests article\" href=\"http://datajs.codeplex.com/wikipage?title=Cross%20Domain%20Requests&amp;referringTitle=OData%20Networking\" target=\"_blank\">I cannot perform update operations on cross domain requests</a>.&nbsp; I can see why, for CRUD operations, one would want the WCF Data service to be part of the same project as the HTML page or web form.&nbsp; I'm fairly new to a lot of this, so perhaps you know the answer to two&nbsp;follow-up questions for me:</p>\n<p>1) I had similar trouble while having the WCF Data service project running&nbsp;in the same IS web-site (not a different port)&nbsp;but only with a different virtual directory than the front-end HTML application.&nbsp; Is that considered \"cross domain\" as well?</p>\n<p>2) Is there a web-service solution out there that works with Entity Framework and would work well with cross domain requests, including update operations, and would also work with datajs?</p>\n<p>Thanks again for your help</p>\n<p>Tim</p>",
    "PostedDate": "2012-04-06T07:20:59.977-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "829134",
    "ThreadId": "351344",
    "Html": "<p>Hi Tim,</p>\r\n<p>&nbsp;&nbsp; Sorry for the delayed response.&nbsp; In answer to your questions:</p>\r\n<p>&nbsp;&nbsp; 1. Yes,&nbsp;a different port is a different domain and so considered a cross-domain request.</p>\r\n<p>&nbsp;&nbsp; 2.&nbsp;I don't quite understand the question. I don't thinkg EF has anything to do with the issue here.. the problem is completely cross domain.. what you cand o is have a \"dummy\" web service or IIS handler that serves as proxy for your service in the other domain.&nbsp; It would only relay the request made by datajs to the desired endpoint in the other domain and then the response back.</p>\r\n<p>Regards,</p>\r\n<p>Alex Trigo.</p>",
    "PostedDate": "2012-04-26T16:50:56.12-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]