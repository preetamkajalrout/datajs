[
  {
    "Id": "1073471",
    "ThreadId": "451506",
    "Html": "Hi guys,\r<br />\n<br />\nI still have the issue in 1.1.0 when doing GET requests with Atom/XML and there is no embedded metadata returned by the server. \r<br />\n<br />\n But when I want to do POST requests in atom/xml format and I create a payload in JSON structure (without metadata) and hand over the previously fetched metadata too in the request then all types will get Edm.String in the POST request\r<br />\nSimilar to here:\r<br />\n<a href=\"https://datajs.codeplex.com/workitem/557\" rel=\"nofollow\">https://datajs.codeplex.com/workitem/557</a>\r<br />\n<br />\nHas this been fixed?<br />\n",
    "PostedDate": "2013-07-26T06:26:10.147-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1075437",
    "ThreadId": "451506",
    "Html": "Hi you can try it yourself when doing a POST to the services.odata.org sample write service with Atom/XML.\r<br />\n<br />\nThen the POST XML content generated by datajs looks as follows:\r<br />\n&lt;a:entry xmlns:a=&quot;<a href=\"http://www.w3.org/2005/Atom\" rel=\"nofollow\">http://www.w3.org/2005/Atom</a>&quot; xmlns:m=&quot;<a href=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" rel=\"nofollow\">http://schemas.microsoft.com/ado/2007/08/dataservices/metadata</a>&quot; xmlns:d=&quot;<a href=\"http://schemas.microsoft.com/ado/2007/08/dataservices\" rel=\"nofollow\">http://schemas.microsoft.com/ado/2007/08/dataservices</a>&quot;&gt;\r<br />\n&lt;a:author&gt;\r<br />\n&lt;a:name&gt;&lt;/a:name&gt;\r<br />\n&lt;/a:author&gt;\r<br />\n&lt;a:category term=&quot;ODataDemo.Product&quot; scheme=&quot;<a href=\"http://schemas.microsoft.com/ado/2007/08/dataservices/scheme&quot;&gt;&lt;/a:category\" rel=\"nofollow\">http://schemas.microsoft.com/ado/2007/08/dataservices/scheme\"></a:category</a>&gt;\r<br />\n&lt;a:content type=&quot;application/xml&quot;&gt;\r<br />\n&lt;m:properties&gt;\r<br />\n&lt;d:ID m:type=&quot;Edm.String&quot;&gt;93&lt;/d:ID&gt;\r<br />\n&lt;d:ReleaseDate m:type=&quot;Edm.String&quot;&gt;2013-08-01T06:27:55&lt;/d:ReleaseDate&gt;\r<br />\n&lt;d:Price m:type=&quot;Edm.String&quot;&gt;2&lt;/d:Price&gt;\r<br />\n&lt;d:Rating m:type=&quot;Edm.String&quot;&gt;3&lt;/d:Rating&gt;\r<br />\n&lt;/m:properties&gt;\r<br />\n&lt;/a:content&gt;\r<br />\n&lt;a:title type=&quot;text&quot;&gt;Test&lt;/a:title&gt;\r<br />\n&lt;a:summary type=&quot;text&quot;&gt;Description&lt;/a:summary&gt;\r<br />\n&lt;/a:entry&gt;\r<br />\n<br />\nEverything has Edm.String which is not correct.\r<br />\nUsing datajs 1.1.0 stable<br />\n",
    "PostedDate": "2013-07-31T23:33:06.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1080412",
    "ThreadId": "451506",
    "Html": "Hi,<br />\n<br />\nit also doesn't work with <br />\ndatajs 1.1.1 stable :(<br />\n<br />\nalways Edm.String for all types in the post body<br />\ncould this be fixed or even removed? normally the server knows its metadata...<br />\n<br />\nI debugged a little bit and found out that in <br />\n<br />\nvar xmlNewODataDataElement = function (dom, name, value, dataItemMetadata, dataItemModel, model) {<br />\n<br />\n// does not work...wrong methd???<br />\nvar typeName = dataItemTypeName(value, dataItemMetadata, dataItemModel); <br />\n<br />\nthe function dataItemTypeName does not work correctly and doesn't consider the third dataItemModel parameter...<br />\nshould another function be called instead?<br />\n<br />\nwhat works is <br />\nvar typeName = dataItemTypeName(value, dataItemModel); <br />\ndataItemMetadata is an empty object <br />\n<br />\nAnalyzed further:<br />\nfor PUT requests it works correctly because dataItemMetadata is not empty in that case...<br />\n<br />\n<br />\nThanks!<br />\n",
    "PostedDate": "2013-08-14T01:46:33.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1092131",
    "ThreadId": "451506",
    "Html": "I am having the same problem, when using Odata.request with method &quot;POST&quot;, metadata ist not used. \r<br />\n<br />\nI tried Odata.defaultMetadata.push(metadata) and Odata.request(request, success, error, undefined, undefined, metadata) - which both end up ignoring given metadata... \r<br />\n<br />\nI have not yet gone into debugging data.js, but will try now...<br />\n",
    "PostedDate": "2013-09-13T00:58:53.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1092262",
    "ThreadId": "451506",
    "Html": "Got it to work by extending the entity with custom __metadata property.... this is not a recommended solution... but nontheless, here is my code:<br />\n<pre><code>function generateMetadata(entityName, fullmeta) {\n    var meta = {};\n    var props = {};\n    meta[&quot;properties&quot;] = props;\n\n    if (fullmeta &amp;&amp; fullmeta.dataServices &amp;&amp; fullmeta.dataServices.schema &amp;&amp; fullmeta.dataServices.schema[0] &amp;&amp; fullmeta.dataServices.schema[0].entityType) {\n        var entity = $(fullmeta.dataServices.schema[0].entityType).filter(function () {return this.name == entityName});\n        if (entity &amp;&amp; entity.length &gt; 0) {\n            entity = entity[0];\n            for (var i = 0; i &lt; entity.property.length; i++) {\n                if (entity.property[i].name != &quot;__metadata&quot;)\n                    props[entity.property[i].name] = entity.property[i];\n            }\n        }\n    }\n    return meta;\n}</code></pre>\n\nHope this might help someone<br />\n",
    "PostedDate": "2013-09-13T05:13:31.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]